using System;
using System.Diagnostics;
using Castle.Windsor;
using Castle.MicroKernel.Registration;

namespace WindsorIoc
{

    public interface IWindsorContainerTestInjection { }
    public class WindsorContainerTestInjection : IWindsorContainerTestInjection
    {
        WindsorContainer container;
        public WindsorContainerTestInjection()
        {
            container = new WindsorContainer();
            InitContainer();
        }
        public void InitContainer()
        {
            container.Register(Component.For<IA00>().ImplementedBy<A00>());
            container.Register(Component.For<IA01>().ImplementedBy<A01>());
            container.Register(Component.For<IA10>().ImplementedBy<A10>());
            container.Register(Component.For<IA11>().ImplementedBy<A11>());
            container.Register(Component.For<IB00>().ImplementedBy<B00>());
            container.Register(Component.For<IB01>().ImplementedBy<B01>());
            container.Register(Component.For<IB10>().ImplementedBy<B10>());
            container.Register(Component.For<IB11>().ImplementedBy<B11>());
            container.Register(Component.For<IC00>().ImplementedBy<C00>());
            container.Register(Component.For<IC01>().ImplementedBy<C01>());
            container.Register(Component.For<IC10>().ImplementedBy<C10>());
            container.Register(Component.For<IC11>().ImplementedBy<C11>());
            container.Register(Component.For<ID00>().ImplementedBy<D00>());
            container.Register(Component.For<ID01>().ImplementedBy<D01>());
            container.Register(Component.For<ID10>().ImplementedBy<D10>());
            container.Register(Component.For<ID11>().ImplementedBy<D11>());
            container.Register(Component.For<IE00>().ImplementedBy<E00>());
            container.Register(Component.For<IE01>().ImplementedBy<E01>());
            container.Register(Component.For<IE10>().ImplementedBy<E10>());
            container.Register(Component.For<IE11>().ImplementedBy<E11>());
            container.Register(Component.For<IF00>().ImplementedBy<F00>());
            container.Register(Component.For<IF01>().ImplementedBy<F01>());
            container.Register(Component.For<IF10>().ImplementedBy<F10>());
            container.Register(Component.For<IF11>().ImplementedBy<F11>());
            container.Register(Component.For<IG00>().ImplementedBy<G00>());
            container.Register(Component.For<IG01>().ImplementedBy<G01>());
            container.Register(Component.For<IG10>().ImplementedBy<G10>());
            container.Register(Component.For<IG11>().ImplementedBy<G11>());
            container.Register(Component.For<IH00>().ImplementedBy<H00>());
            container.Register(Component.For<IH01>().ImplementedBy<H01>());
            container.Register(Component.For<IH10>().ImplementedBy<H10>());
            container.Register(Component.For<IH11>().ImplementedBy<H11>());
            container.Register(Component.For<II00>().ImplementedBy<I00>());
            container.Register(Component.For<II01>().ImplementedBy<I01>());
            container.Register(Component.For<II10>().ImplementedBy<I10>());
            container.Register(Component.For<II11>().ImplementedBy<I11>());
            container.Register(Component.For<IJ00>().ImplementedBy<J00>());
            container.Register(Component.For<IJ01>().ImplementedBy<J01>());
            container.Register(Component.For<IJ10>().ImplementedBy<J10>());
            container.Register(Component.For<IJ11>().ImplementedBy<J11>());
            container.Register(Component.For<IK00>().ImplementedBy<K00>());
            container.Register(Component.For<IK01>().ImplementedBy<K01>());
            container.Register(Component.For<IK10>().ImplementedBy<K10>());
            container.Register(Component.For<IK11>().ImplementedBy<K11>());
            container.Register(Component.For<IL00>().ImplementedBy<L00>());
            container.Register(Component.For<IL01>().ImplementedBy<L01>());
            container.Register(Component.For<IL10>().ImplementedBy<L10>());
            container.Register(Component.For<IL11>().ImplementedBy<L11>());
            container.Register(Component.For<IM00>().ImplementedBy<M00>());
            container.Register(Component.For<IM01>().ImplementedBy<M01>());
            container.Register(Component.For<IM10>().ImplementedBy<M10>());
            container.Register(Component.For<IM11>().ImplementedBy<M11>());
            container.Register(Component.For<IN00>().ImplementedBy<N00>());
            container.Register(Component.For<IN01>().ImplementedBy<N01>());
            container.Register(Component.For<IN10>().ImplementedBy<N10>());
            container.Register(Component.For<IN11>().ImplementedBy<N11>());
            container.Register(Component.For<IO00>().ImplementedBy<O00>());
            container.Register(Component.For<IO01>().ImplementedBy<O01>());
            container.Register(Component.For<IO10>().ImplementedBy<O10>());
            container.Register(Component.For<IO11>().ImplementedBy<O11>());
            container.Register(Component.For<IP00>().ImplementedBy<P00>());
            container.Register(Component.For<IP01>().ImplementedBy<P01>());
            container.Register(Component.For<IP10>().ImplementedBy<P10>());
            container.Register(Component.For<IP11>().ImplementedBy<P11>());
            container.Register(Component.For<IQ00>().ImplementedBy<Q00>());
            container.Register(Component.For<IQ01>().ImplementedBy<Q01>());
            container.Register(Component.For<IQ10>().ImplementedBy<Q10>());
            container.Register(Component.For<IQ11>().ImplementedBy<Q11>());
            container.Register(Component.For<IR00>().ImplementedBy<R00>());
            container.Register(Component.For<IR01>().ImplementedBy<R01>());
            container.Register(Component.For<IR10>().ImplementedBy<R10>());
            container.Register(Component.For<IR11>().ImplementedBy<R11>());
            container.Register(Component.For<IS00>().ImplementedBy<S00>());
            container.Register(Component.For<IS01>().ImplementedBy<S01>());
            container.Register(Component.For<IS10>().ImplementedBy<S10>());
            container.Register(Component.For<IS11>().ImplementedBy<S11>());
            container.Register(Component.For<IT00>().ImplementedBy<T00>());
            container.Register(Component.For<IT01>().ImplementedBy<T01>());
            container.Register(Component.For<IT10>().ImplementedBy<T10>());
            container.Register(Component.For<IT11>().ImplementedBy<T11>());
            container.Register(Component.For<IU00>().ImplementedBy<U00>());
            container.Register(Component.For<IU01>().ImplementedBy<U01>());
            container.Register(Component.For<IU10>().ImplementedBy<U10>());
            container.Register(Component.For<IU11>().ImplementedBy<U11>());
            container.Register(Component.For<IV00>().ImplementedBy<V00>());
            container.Register(Component.For<IV01>().ImplementedBy<V01>());
            container.Register(Component.For<IV10>().ImplementedBy<V10>());
            container.Register(Component.For<IV11>().ImplementedBy<V11>());
            container.Register(Component.For<IW00>().ImplementedBy<W00>());
            container.Register(Component.For<IW01>().ImplementedBy<W01>());
            container.Register(Component.For<IW10>().ImplementedBy<W10>());
            container.Register(Component.For<IW11>().ImplementedBy<W11>());
            container.Register(Component.For<IX00>().ImplementedBy<X00>());
            container.Register(Component.For<IX01>().ImplementedBy<X01>());
            container.Register(Component.For<IX10>().ImplementedBy<X10>());
            container.Register(Component.For<IX11>().ImplementedBy<X11>());
            container.Register(Component.For<IY00>().ImplementedBy<Y00>());
            container.Register(Component.For<IY01>().ImplementedBy<Y01>());
            container.Register(Component.For<IY10>().ImplementedBy<Y10>());
            container.Register(Component.For<IY11>().ImplementedBy<Y11>());
            container.Register(Component.For<IZ00>().ImplementedBy<Z00>());
            container.Register(Component.For<IZ01>().ImplementedBy<Z01>());
            container.Register(Component.For<IZ10>().ImplementedBy<Z10>());
            container.Register(Component.For<IZ11>().ImplementedBy<Z11>());
        }
        public TimeSpan TestContainer()
        {
            var stopWatch = new Stopwatch();
            stopWatch.Start();
            container.Resolve<IA00>();
            container.Resolve<IA01>();
            container.Resolve<IA10>();
            container.Resolve<IA11>();
            container.Resolve<IB00>();
            container.Resolve<IB01>();
            container.Resolve<IB10>();
            container.Resolve<IB11>();
            container.Resolve<IC00>();
            container.Resolve<IC01>();
            container.Resolve<IC10>();
            container.Resolve<IC11>();
            container.Resolve<ID00>();
            container.Resolve<ID01>();
            container.Resolve<ID10>();
            container.Resolve<ID11>();
            container.Resolve<IE00>();
            container.Resolve<IE01>();
            container.Resolve<IE10>();
            container.Resolve<IE11>();
            container.Resolve<IF00>();
            container.Resolve<IF01>();
            container.Resolve<IF10>();
            container.Resolve<IF11>();
            container.Resolve<IG00>();
            container.Resolve<IG01>();
            container.Resolve<IG10>();
            container.Resolve<IG11>();
            container.Resolve<IH00>();
            container.Resolve<IH01>();
            container.Resolve<IH10>();
            container.Resolve<IH11>();
            container.Resolve<II00>();
            container.Resolve<II01>();
            container.Resolve<II10>();
            container.Resolve<II11>();
            container.Resolve<IJ00>();
            container.Resolve<IJ01>();
            container.Resolve<IJ10>();
            container.Resolve<IJ11>();
            container.Resolve<IK00>();
            container.Resolve<IK01>();
            container.Resolve<IK10>();
            container.Resolve<IK11>();
            container.Resolve<IL00>();
            container.Resolve<IL01>();
            container.Resolve<IL10>();
            container.Resolve<IL11>();
            container.Resolve<IM00>();
            container.Resolve<IM01>();
            container.Resolve<IM10>();
            container.Resolve<IM11>();
            container.Resolve<IN00>();
            container.Resolve<IN01>();
            container.Resolve<IN10>();
            container.Resolve<IN11>();
            container.Resolve<IO00>();
            container.Resolve<IO01>();
            container.Resolve<IO10>();
            container.Resolve<IO11>();
            container.Resolve<IP00>();
            container.Resolve<IP01>();
            container.Resolve<IP10>();
            container.Resolve<IP11>();
            container.Resolve<IQ00>();
            container.Resolve<IQ01>();
            container.Resolve<IQ10>();
            container.Resolve<IQ11>();
            container.Resolve<IR00>();
            container.Resolve<IR01>();
            container.Resolve<IR10>();
            container.Resolve<IR11>();
            container.Resolve<IS00>();
            container.Resolve<IS01>();
            container.Resolve<IS10>();
            container.Resolve<IS11>();
            container.Resolve<IT00>();
            container.Resolve<IT01>();
            container.Resolve<IT10>();
            container.Resolve<IT11>();
            container.Resolve<IU00>();
            container.Resolve<IU01>();
            container.Resolve<IU10>();
            container.Resolve<IU11>();
            container.Resolve<IV00>();
            container.Resolve<IV01>();
            container.Resolve<IV10>();
            container.Resolve<IV11>();
            container.Resolve<IW00>();
            container.Resolve<IW01>();
            container.Resolve<IW10>();
            container.Resolve<IW11>();
            container.Resolve<IX00>();
            container.Resolve<IX01>();
            container.Resolve<IX10>();
            container.Resolve<IX11>();
            container.Resolve<IY00>();
            container.Resolve<IY01>();
            container.Resolve<IY10>();
            container.Resolve<IY11>();
            container.Resolve<IZ00>();
            container.Resolve<IZ01>();
            container.Resolve<IZ10>();
            container.Resolve<IZ11>();

            stopWatch.Stop();
            var ts = stopWatch.Elapsed;
            // Console.WriteLine($"Injection Time Elapsed: {ts}");
            return ts;
        }
    }
}

